schemaVersion: 2.0.0
metadata:
  name: nodejs-postgres
projects:
  - name: nodejs-sbose78-postgres
    git:
      location: https://github.com/sbose78/nodejs-rest-http-crud
      branch: app-stak
  - name: nodes-postgres
    git:
      location: https://github.com/nodeshift-starters/nodejs-rest-http-crud
      branch: master
workloads:
  - chePlugin:
      registryEntry:
        id: che-incubator/typescript/latest
  - chePlugin:
      registryEntry:
        id: redhat/dependency-analytics/latest
  - container:
      name: nodejs
      image: quay.io/eclipse/che-nodejs10-ubi:nightly
      memoryLimit: 512Mi
      endpoints:
        - name: 'nodejs'
          port: 3000
      mountSources: true

commands:
  - exec:
      id: build 
      component: nodejs
      commandLine: npm install
      workdir: '${PROJECTS_ROOT}/nodejs-rest-http-crud'
  - exec:
      id: build 
      component: nodejs
      commandLine: nodemon app.js
      workdir: '${PROJECTS_ROOT}/nodejs-rest-http-crud'


# outer loop.
services:

  - deploy: 
      manifests:
        - ${STACK_ROOT}/manifests/postgres.yaml

  - build:
      type: # actually an s2i build ;)
        Dockerfile: '${STACK_ROOT}/build/Dockerfile'

    deploy:
      manifests: 
        - ${STACK_ROOT}/manifests/binding-secret.yaml
      podTemplate:
        containers:
          - env:
              - name: DB_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: my-database-secret
                    key: user
              - name: DB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: my-database-secret
                    key: password
            readinessProbe:
              httpGet: ""
              path: /api/health/readiness
              port: 8080
              scheme: HTTP